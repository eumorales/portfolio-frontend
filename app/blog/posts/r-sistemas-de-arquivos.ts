import { BlogPost } from "@/types/blog";

const post: BlogPost = {
  id: "r-sistemas-de-arquivos",
  title: "Sistemas de Arquivos: Conceitos e Funcionalidades",
  date: "Jun 27, 2025",
  readTime: "5 min read",
  language: "Portuguese",
  category: "Notes",
  year: 2025,
  excerpt:
    "Resumo sobre sistemas de arquivos, abordando conceitos como arquivos, diret√≥rios, aloca√ß√£o, ger√™ncia de espa√ßo livre, t√©cnicas de acesso e prote√ß√£o de dados.",
  tags: ["sistemas operacionais", "arquivos", "sistemas de arquivos"],
  content: `
    <p>Resumo feito para a disciplina de Sistemas Operacionais, com o objetivo de sintetizar os principais conceitos sobre sistemas de arquivos e suas funcionalidades.</p>

    <h2>üìÑ 1. Arquivo</h2>
    <p>Arquivos s√£o unidades b√°sicas de armazenamento, contendo dados como textos, imagens ou programas. Cada arquivo possui atributos como nome, tamanho e permiss√µes, facilitando a organiza√ß√£o e acesso.</p>

    <h2>üìÅ 2. Diret√≥rio</h2>
    <p>Diret√≥rios organizam arquivos em uma estrutura hier√°rquica, funcionando como "pastas". Eles podem conter outros arquivos ou subdiret√≥rios, mantendo o sistema estruturado.</p>

    <h2>üíæ 3. Sistema de Arquivos</h2>
    <p>O sistema de arquivos gerencia o armazenamento e recupera√ß√£o de dados em dispositivos como HDs ou SSDs. Exemplos incluem FAT32, NTFS e ext4, cada um com caracter√≠sticas espec√≠ficas de desempenho e seguran√ßa.</p>

    <h2>üóÇÔ∏è 4. Formas de Aloca√ß√£o de Arquivos</h2>
    <ul>
      <li><strong>Aloca√ß√£o Cont√≠gua:</strong> Arquivo em blocos consecutivos, r√°pido, mas propenso √† fragmenta√ß√£o.</li>
      <li><strong>Aloca√ß√£o Encadeada:</strong> Blocos ligados por ponteiros, flex√≠vel, mas mais lento.</li>
      <li><strong>Aloca√ß√£o Indexada:</strong> Usa √≠ndices para mapear blocos, equilibrando efici√™ncia e flexibilidade.</li>
    </ul>

    <h2>üóÉÔ∏è 5. Ger√™ncia de Espa√ßo Livre</h2>
    <ul>
      <li><strong>Lista de Blocos Livres:</strong> Registra blocos dispon√≠veis no disco.</li>
      <li><strong>Bitmap:</strong> Mapa de bits para indicar blocos livres ou ocupados.</li>
      <li><strong>Agrupamento:</strong> Organiza blocos livres em grupos para otimizar aloca√ß√µes.</li>
    </ul>

    <h2>üîç 6. T√©cnicas de Acesso a Dados</h2>
    <ul>
      <li><strong>Acesso Sequencial:</strong> Leitura na ordem de armazenamento, ideal para arquivos grandes.</li>
      <li><strong>Acesso Direto:</strong> Acesso a blocos espec√≠ficos, usado em bancos de dados.</li>
      <li><strong>Acesso Indexado:</strong> Localiza√ß√£o r√°pida via √≠ndices, comum em sistemas complexos.</li>
    </ul>

    <h2>üîí 7. Prote√ß√£o da Integridade dos Dados</h2>
    <h3>a. Organiza√ß√£o da Cache</h3>
    <p>A cache armazena dados na RAM para acesso r√°pido, usando pol√≠ticas como LRU (<em>Least Recently Used</em>) para gerenciar blocos, reduzindo o tempo de leitura/escrita.</p>
    <h3>b. Sistemas de Arquivos Jornalizados (<em>Journaling</em>)</h3>
    <p>Sistemas como NTFS e ext4 registram altera√ß√µes antes de aplic√°-las, garantindo recupera√ß√£o em caso de falhas, como quedas de energia, mantendo a consist√™ncia do sistema.</p>
  `,
};

export default post;
